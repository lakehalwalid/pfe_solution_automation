#! /bin/bash

cd ~/
sudo apt install -y python3 python3-pip git libmysqlclient-dev mysql-server
sudo apt install -y python3-pip

git clone https://github.com/free5gmano/kube5gnfvo.git
cd kube5gnfvo/
sudo pip3 install -r requirement.txt

#install multus
cd ./example/
kubectl apply -f multus-daemonset-pre-1.16.yml
sleep 15

#install openvswitch
sudo apt install openvswitch-switch -y
sudo ovs-vsctl add-br br1

#install ovs-cni
kubectl apply -f ovs-cni.yaml
sleep 15

cat <<EOF >./ovs-net-crd.yaml
apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: ovs-net
  annotations:
    k8s.v1.cni.cncf.io/resourceName: ovs-cni.network.kubevirt.io/br1
spec:
  config: '{
      "cniVersion": "0.3.1",
      "type": "ovs",
      "bridge": "br1"
    }'
EOF
kubectl apply -f ovs-net-crd.yaml
sleep 15

#install etcd operator
cd ./etcd-cluster/rbac/
./create_role.sh
sleep 5
cd ..
kubectl apply -f deployment.yaml
sleep 15

check=$(kubectl get customresourcedefinitions)
found="no"
while read line
do
crd=$( echo "$line" | awk {print'$1'})
if [[ $crd == "etcdclusters.etcd.database.coreos.com" ]]
then found="yes"
fi
done <<< "$check"

if [[ $found == "no" ]]
then echo "apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: etcdclusters.etcd.database.coreos.com
spec:
  group: etcd.database.coreos.com
  names:
    kind: EtcdCluster
    listKind: EtcdClusterList
    plural: etcdclusters
    shortNames:
    - etcdclus
    - etcd
    singular: etcdcluster
  scope: Namespaced
  version: v1beta2" > ./etcdclusters.etcd.database.coreos.com.crd.yaml
kubectl apply -f ./
fi

sleep 15
kubectl apply -f ./

sleep 15
#install Metrics Server:
cd ../metrics-server/
kubectl apply -f ./

sleep 15
#install Node Exporter:
cd ..
kubectl apply -f prom-node-exporter.yaml
sleep 15

#install Kubevirt:
cd ./kubevirt/
kubectl apply -f kubevirt-operator.yaml
sleep 15
kubectl apply -f kubevirt-cr.yaml

#kubevirt-py
pip3 install git+https://github.com/yanyan8566/client-python
