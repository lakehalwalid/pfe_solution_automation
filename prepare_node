#! /bin/bash

#disable swapp
swapoff -a

#configure iptables to receive bridged network traffic
echo "net/bridge/bridge-nf-call-ip6tables = 1
net/bridge/bridge-nf-call-iptables = 1
net/bridge/bridge-nf-call-arptables = 1" >> /etc/ufw/sysctl.conf

#install ebtables ethtool
apt-get install ebtables ethtool

#Uninstall old versions
apt-get remove docker docker-engine docker.io containerd runc

#install docker
apt-get update -y
apt-get -y install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common

#add docker GPG key
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
#add docker repository
add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

apt-get update -y
apt-get install -y containerd.io \
        docker-ce=5:18.09.1~3-0~ubuntu-$(lsb_release -cs) \
        docker-ce-cli=5:18.09.1~3-0~ubuntu-$(lsb_release -cs)

#sudo usermod -aG docker $USER
#newgrp docker #command which can reflect group changes in current session.

mkdir /etc/docker
# Set up the Docker daemon
cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

# Create /etc/systemd/system/docker.service.d
sudo mkdir -p /etc/systemd/system/docker.service.d

# Restart Docker
sudo systemctl daemon-reload
sudo systemctl restart docker


#add apt keys
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
#add repository
cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb http://apt.kubernetes.io/ kubernetes-xenial main
EOF

#install kubelet kubeadm kubectl
apt-get update
apt-get install -y kubelet=1.15.3-00 kubeadm=1.15.3-00 kubectl=1.15.3-00 --allow-downgrades

#hold kubeadm kublet kubectl
sudo apt-mark hold kubectl kubeadm kubelet
